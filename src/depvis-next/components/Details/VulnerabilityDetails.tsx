import { gql, useQuery } from '@apollo/client';
import { Container } from 'react-bootstrap';
import Loading from '../Loading/Loading';

const getVulnerabilityDetailsQuery = gql`
  query vulnerabilityDetails($vulnerabilityId: String) {
    vulnerabilities(where: { id: $vulnerabilityId }) {
      id
      name
      cve
      ghsa
      description
      affectedVersions
      cvssScore
      cvssVector
      cwe
      references {
        url
      }
    }
  }
`;
const VulnerabilityDetails = (props) => {
  const { vulnerabilityId } = props;
  const { data, loading } = useQuery(getVulnerabilityDetailsQuery, {
    variables: { vulnerabilityId: vulnerabilityId },
  });

  if (loading) return <Loading />;
  if (!data.vulnerabilities[0]) return <b>No data found!</b>;
  const vulnerability = data.vulnerabilities[0];
  return (
    <Container style={{ wordBreak: 'break-all' }} className="px-0">
      <h5>Vulnerability details</h5>
      <span>
        <b>Name:</b> {vulnerability.name}
      </span>
      <br />
      <span>
        <b>Id:</b> {vulnerability.id}
      </span>
      <br />
      <span>
        <b>CVSS Score:</b> {vulnerability.cvssScore}
      </span>
      <p>{vulnerability.description}</p>
      <br />
      {vulnerability.references && (
        <span>
          <b>References:</b>
          <ul>
            {vulnerability.references.map((r, index) => (
              <li className="overflow-text">
                <a href={r.url} target="_blank">
                  {r.url}
                </a>
              </li>
            ))}
          </ul>
        </span>
      )}
      <br />
    </Container>
  );
};

export default VulnerabilityDetails;
