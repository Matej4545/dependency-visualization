import { OsvVulnProvider } from "./OsvVulnProvider";
import { SonatypeOSSVulnProvider } from "./SonatypeOSSVulnProvider";

export const VulnFetcherHandler = async (
  purlList: string[],
  type = process.env.VULN_DB || "Sonatype"
) => {
  if (!type) {
    throw new Error(
      `No provider type for vulnerability database was provided!`
    );
  }
  if (type.toLowerCase() == "sonatype") {
    const OSS = new SonatypeOSSVulnProvider();
    const res = await OSS.fetchInfo(purlList);
    return res;
  } else if (type.toLowerCase() == "osv") {
    const Osv = new OsvVulnProvider();
    const res = await Osv.fetchInfo(purlList);
    return res;
  } else {
    throw new Error(
      `No provider for vulnerability database ${type} implemented!`
    );
  }
};
